'use client';
import React from 'react';
import { StaticRouterProvider, createStaticRouter } from 'react-router-dom/server.mjs';
import { matchRoutes as originMatchRoutes } from 'react-router-dom';
import type { RouteObject } from 'react-router-dom';

export default function Router(props) {
  const { routes, location, basename } = props;
  // Server router only be called once.

  const matches = matchRoutes(routes, location, basename);
  const routerContext = {
    location,
    basename,
    matches
  };
  const router = createStaticRouter(routes, routerContext);

  const element = (
    <StaticRouterProvider
      router={router}
      context={routerContext}
      hydrate={false}
    />
  );

  return element;
}

function matchRoutes(
  routes,
  location,
  basename,
): RouteMatch[] {
  const matchRoutesFn = originMatchRoutes;
  let matches = matchRoutesFn(routes as RouteObject[], location, basename);
  if (!matches) return [];
  return matches.map(({ params, pathname, pathnameBase, route }) => ({
    params,
    pathname,
    route: route as RouteItem,
    pathnameBase,
  }));
}
